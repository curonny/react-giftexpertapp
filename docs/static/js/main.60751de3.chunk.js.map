{"version":3,"sources":["components/AddCategory.js","helpers/getGift.js","components/GiftGridItem.js","components/GiftGrid.js","GiftExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","console","log","getGift","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","setImages","useEffect","then","GiftExpert","ReactDOM","render","document","getElementById"],"mappings":"mLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OAAOC,MAAOT,EAAYU,SAnBjB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,OACvBG,QAAQC,IAAIV,EAAEQ,OAAOF,a,+BCHhBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCSLO,EAZa,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAItC,OAFAL,QAAQC,IAAI,CAAEa,KAAIC,QAAOV,QAGrB,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,SCJJO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EAEVhB,mBAAS,IAFC,mBAE/B6B,EAF+B,KAEvBO,EAFuB,KAQtC,OALAC,qBAAU,WACNtB,EAAQC,GACHsB,KAAKF,KACX,CAACpB,IAGA,qCACI,6BACKA,IAEL,qBAAKgB,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCUtBY,EA5BI,WAAM,MAEevC,mBAAS,CAAC,UAFzB,mBAEdQ,EAFc,KAEFT,EAFE,KASrB,OACI,qCACI,4CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQS,EAAWiB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MClB7BwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.60751de3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropsTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n        console.log(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue(\"\");\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <input\n                type=\"text\" value={inputValue} onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropsTypes.func.isRequired,\n}","\n\n\n\n\nexport const getGift = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=py3yFMCLrKhvfgagzcZpqzjXGvzLm2Gb&limit=10`;\n    const respuesta = await fetch(url);\n    const { data } = await respuesta.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GiftGridItem = ({ id, title, url }) => {\n\n    console.log({ id, title, url });\n\n    return (\n        <div className=\"card\">\n            <img src={url} alt={title} />\n            <p> {title}</p>\n        </div>\n    )\n}\n\nexport default GiftGridItem;","import React, { useEffect, useState } from 'react';\nimport { getGift } from '../helpers/getGift';\nimport GiftGridItem from './GiftGridItem';\n\n\nexport const GiftGrid = ({ category }) => {\n\n    const [images, setImages] = useState([])\n    useEffect(() => {\n        getGift(category)\n            .then(setImages);\n    }, [category])\n\n    return (\n        <>\n            <h3>\n                {category}\n            </h3>\n            <div className=\"card-grid\">\n\n                {\n                    images.map(img => (\n                        <GiftGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n\n        </>\n    )\n}\n\nexport default GiftGrid;\n\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AddCategory } from './components/AddCategory';\nimport { GiftGrid } from './components/GiftGrid';\n\nconst GiftExpert = () => {\n    //const categories = ['One', 'Two', 'Three']\n    const [categories, setCategories] = useState(['Obama']);\n    /*    const handleAdd  = ()=>{\n           //setCategories([...categories,'Hunter'])\n           setCategories(cats=>[...categories,\"hunter\"])\n       }\n   \n    */\n    return (\n        <>\n            <h2>GiftExpert</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GiftGrid \n                        key={category}\n                        category={category} />\n                    ))\n                }\n            </ol>\n        </>\n    )\n\n}\n\nexport default GiftExpert;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpert from './GiftExpert';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpert />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}